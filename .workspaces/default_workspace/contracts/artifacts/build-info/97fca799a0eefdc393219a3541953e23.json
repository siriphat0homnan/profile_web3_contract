{
	"id": "97fca799a0eefdc393219a3541953e23",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyContract.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract MyContract {\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyContract.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyContract.sol\":27:53  contract MyContract {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyContract.sol\":27:53  contract MyContract {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e0a162bd5e3a626528291f05d7c9187e14374379b4a4d33db82779ccefd6d7e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201e0a162bd5e3a626528291f05d7c9187e14374379b4a4d33db82779ccefd6d7e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E EXP AND 0x2B 0xD5 0xE3 0xA6 0x26 MSTORE DUP3 SWAP2 CREATE 0x5D PUSH29 0x9187E14374379B4A4D33DB82779CCEFD6D7E64736F6C63430008070033 ",
							"sourceMap": "27:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201e0a162bd5e3a626528291f05d7c9187e14374379b4a4d33db82779ccefd6d7e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E EXP AND 0x2B 0xD5 0xE3 0xA6 0x26 MSTORE DUP3 SWAP2 CREATE 0x5D PUSH29 0x9187E14374379B4A4D33DB82779CCEFD6D7E64736F6C63430008070033 ",
							"sourceMap": "27:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 53,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e0a162bd5e3a626528291f05d7c9187e14374379b4a4d33db82779ccefd6d7e64736f6c63430008070033",
									".code": [
										{
											"begin": 27,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 53,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 53,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 53,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract.sol\":{\"keccak256\":\"0x776dc6ac44f21eb17acbe16bbecf5b9b2cb119561bd121e376c790c05740f33e\",\"urls\":[\"bzz-raw://9b712eeb042bbe80a28a6858a07d2b4aa40eecfc79c4ac03fc4342142663ba4b\",\"dweb:/ipfs/QmfG9N1ghSip3s8UQ5JPohnNHe73jqxwP2wWUvE9H4KR5c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MyContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/MyContract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "MyContract",
							"nameLocation": "36:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:26:0",
							"usedErrors": []
						}
					],
					"src": "0:53:0"
				},
				"id": 0
			}
		}
	}
}