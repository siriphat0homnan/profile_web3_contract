{
	"id": "566905ac9aebb147d7199f6902b82774",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyContract.sol": {
				"content": "contract MyContract {\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyContract.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyContract.sol\":0:32  contract MyContract {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyContract.sol\":0:32  contract MyContract {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a0a18fc1a1d0a87f47f66815ccd72075dabd434ee1467e4ca68f6bcbdbcbce1264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a0a18fc1a1d0a87f47f66815ccd72075dabd434ee1467e4ca68f6bcbdbcbce1264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 LOG1 DUP16 0xC1 LOG1 0xD0 0xA8 PUSH32 0x47F66815CCD72075DABD434EE1467E4CA68F6BCBDBCBCE1264736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "0:32:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a0a18fc1a1d0a87f47f66815ccd72075dabd434ee1467e4ca68f6bcbdbcbce1264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 LOG1 DUP16 0xC1 LOG1 0xD0 0xA8 PUSH32 0x47F66815CCD72075DABD434EE1467E4CA68F6BCBDBCBCE1264736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "0:32:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 32,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 32,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0a18fc1a1d0a87f47f66815ccd72075dabd434ee1467e4ca68f6bcbdbcbce1264736f6c63430008070033",
									".code": [
										{
											"begin": 0,
											"end": 32,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 32,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 32,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 32,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 32,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 32,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract.sol\":{\"keccak256\":\"0xc6ea9741a57c824f2341a2f605ffdab3793b0474474c161358739de86ad4aaaf\",\"urls\":[\"bzz-raw://383e28bb2f942b9524f2ca28fb74a004a71d36337ba9f5b3e51693eebad6b324\",\"dweb:/ipfs/QmZBoYLpZQQxivWyAdZQVpPdaVCNjaRmqveM9nGM8pW3HV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MyContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/MyContract.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> contracts/MyContract.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/MyContract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "MyContract",
							"nameLocation": "9:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "0:32:0",
							"usedErrors": []
						}
					],
					"src": "0:32:0"
				},
				"id": 0
			}
		}
	}
}